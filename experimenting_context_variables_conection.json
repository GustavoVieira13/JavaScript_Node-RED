[
    {
        "id": "75b9f6e65c1652d0",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "66621cefde01484d",
        "type": "inject",
        "z": "75b9f6e65c1652d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "d8268201.14bc4"
            ]
        ]
    },
    {
        "id": "d88921cbf2035a49",
        "type": "link out",
        "z": "75b9f6e65c1652d0",
        "name": "",
        "links": [
            "df750bde08f19c0a",
            "d72eaeb54bb06223",
            "94d7a3458c4a291a"
        ],
        "x": 395,
        "y": 80,
        "wires": []
    },
    {
        "id": "d8268201.14bc4",
        "type": "function",
        "z": "75b9f6e65c1652d0",
        "name": "isNegative?",
        "func": "//Fornecido pela instrutora do curso \"Introduction to Node-RED\"\n//para exemplificar a importa;'ao de biblioteca do JS para o Node-RED\nvar math = global.get('mathjs'); //Loading mathjs npm module\nnode.status({text:\"Started\"}); //Adding status text below the function node\nif (math.isNegative(msg.payload) === true){ //Checking if the number is negative - Checkout documentation to mathjs npm module in the resources\n    setTimeout(function(){ //Executes the function defined after 1000ms\n        node.status({fill:\"yellow\",shape:\"ring\",text:\"Processing...\"}); //Showing status icon with text below the function node\n        setTimeout(function(){ \n            node.send({'payload' : msg.payload}); //Sending asynchronous messages to the flow\n            node.status({fill:\"green\",shape:\"dot\",text:\"Done!\"}); \n        },1000);\n    },1000);\n    node.log(\"Negative\"); //Logging a text to the console\n}else{\n    setTimeout(function(){\n        node.status({fill:\"yellow\",shape:\"dot\",text:\"Warning...\"});\n        node.warn(\"Something happened!\"); //Logging a warning message to the debug console\n        setTimeout(function(){\n            node.status({fill:\"red\",shape:\"dot\",text:\"Error!\"});\n            node.error(\"The number is positive!!!\"); //Logging an error message to the debug console\n            node.error(\"The number is positive!!!\", {'payload' : 'Caught error'}); //Sending an error message to the catch node\n        },1000);\n    },1000);\n    node.log(\"Positive\");\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 80,
        "wires": [
            [
                "d88921cbf2035a49"
            ]
        ]
    },
    {
        "id": "db5171ac820ad1a7",
        "type": "catch",
        "z": "75b9f6e65c1652d0",
        "name": "",
        "scope": [
            "d8268201.14bc4"
        ],
        "uncaught": false,
        "x": 90,
        "y": 220,
        "wires": [
            [
                "06c6228fd66a1581"
            ]
        ]
    },
    {
        "id": "deb39b1dbd6fe008",
        "type": "status",
        "z": "75b9f6e65c1652d0",
        "name": "",
        "scope": [
            "d8268201.14bc4"
        ],
        "x": 100,
        "y": 300,
        "wires": [
            [
                "90652db2455ea3cd"
            ]
        ]
    },
    {
        "id": "06c6228fd66a1581",
        "type": "debug",
        "z": "75b9f6e65c1652d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 220,
        "wires": []
    },
    {
        "id": "90652db2455ea3cd",
        "type": "debug",
        "z": "75b9f6e65c1652d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 300,
        "wires": []
    },
    {
        "id": "f1f9d5cb2d7bd305",
        "type": "inject",
        "z": "75b9f6e65c1652d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-1",
        "payloadType": "num",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "d8268201.14bc4"
            ]
        ]
    },
    {
        "id": "d50554723af1b9a2",
        "type": "inject",
        "z": "75b9f6e65c1652d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-3",
        "payloadType": "num",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "d8268201.14bc4"
            ]
        ]
    }
]